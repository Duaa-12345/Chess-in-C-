#include"Bishop.h"
#include<iostream>
#include"windows.h"
using namespace std;
Bishop::Bishop(int a, int b, int c)
{
	row = a;
	col = b;
	player = c;
}
void Bishop::move(Board *arr[9][9],int cr, int cc,int dr,int dc)
{
	int temp=arr[cr][cc]->getPlayer();
	bool check=true;
	if (arr[cr][cc]->getCode() == 3)
	{
		if(cr!=dr&&cc!=dc)
		{
			if(cr<dr)
			{
				if(cc<dc)                              //check from left top to right bottom
				{
					for(int i=cr+1,j=cc+1;i<=dr;i++,j++)
					{
						if(arr[i][j]!=nullptr)
						{
							check=false;
							break;
						}
						else
						{
							check=true;
						}
						if(i==dr)
						{
							if(j!=dc)
							{
								check=false;
								break;
							}
						}
						
					}
				}
				else if(cc>dc)
				{
					for(int i=cr+1,j=cc-1;i<=dr;i++,j--)         //from right top to left bottom
					{
						if(arr[i][j]!=nullptr)
						{
							check=false;
							break;
						}
						else
						{
							check=true;
						}
						if(i==dr)
						{
							if(j!=dc)
							{
								check=false;
								break;
							}
						}
					}
				}
			}
			else if(cr>dr)
			{
				if(cc<dc)
				{
					for(int i=cr-1,j=cc+1;i>=dr;i--,j++)         //from left bottom to right top
					{
						if(arr[i][j]!=nullptr)
						{
							check=false;
							break;
						}
						else
						{
							check=true;
						}
						if(i==dr)
						{
							if(j!=dc)
							{
								check=false;
								break;
							}
						}
					}
				}
				else if(cc>dc)
				{
					for(int i=cr-1,j=cc-1;i>=dr;i--,j--)         //from right bottom to left top
					{
						if(arr[i][j]!=nullptr)
						{
							check=false;
							break;
						}
						else
						{
							check=true;
						}
						if(i==dr)
						{
							if(j!=dc)
							{
								check=false;
								break;
							}
						}
					}
				}
			}
			if(check==true)
			{

				arr[dr][dc]=arr[cr][cc];
				arr[cr][cc]=nullptr;
				
			}
			else
			{
				Beep(1000000,500);
				system("cls");
				cout<<"ILLEGAL MOVE "<<endl;
				
			}
	  }
	 else
		{
				cout<<"ILLEGAL MOVE "<<endl;
				
		}

	}

}


void Bishop::attack(Board *arr[9][9],int cr, int cc,int dr,int dc)
{
	int temp=arr[cr][cc]->getPlayer();
	int temp1=arr[dr][dc]->getPlayer();
	int temp2=arr[dr][dc]->getCode();
	bool check=true;
	if (arr[cr][cc]->getCode() == 3)
	{
		if(cr!=dr&&cc!=dc)
		{
			if(cr<dr)
			{
				if(cc<dc)                              //check from left top to right bottom
				{
					if(cr==dr-1 &&cc==dc-1)                   //check the very next row
					{
				      check=true;
					}
					else
					{
					for(int i=cr+1,j=cc+1;i<dr;i++,j++)
					{
						if(arr[i][j]!=nullptr)
						{
							check=false;
							break;
						}
						else
						{
							check=true;
						}
						if(i+1==dr)
						{
							if(j+1!=dc)
							{
								check=false;
								break;
							}
						}
					}
					}
				}
				else if(cc>dc)
				{
					if(cr==dr-1 &&cc==dc+1)                   //check the very next row
					{
				      check=true;
					}
					else
					{
					for(int i=cr+1,j=cc-1;i<dr;i++,j--)         //from right top to left bottom
					{
						if(arr[i][j]!=nullptr)
						{
							check=false;
							break;
						}
						else
						{
							check=true;
						}
						if(i+1==dr)
						{
							if(j-1!=dc)
							{
								check=false;
								break;
							}
						}
					}
					}
				}
			}
			else if(cr>dr)
			{
				if(cc<dc)
				{
					if(cr==dr+1 &&cc==dc-1)                   //check the very next row
					{
				      check=true;
					}
					else
					{
					for(int i=cr-1,j=cc+1;i>dr;i--,j++)         //from left bottom to right top
					{
						if(arr[i][j]!=nullptr)
						{
							check=false;
							break;
						}
						else
						{
							check=true;
						}
						if(i-1==dr)
						{
							if(j+1!=dc)
							{
								check=false;
								break;
							}
						}
					}
					}
				}
				else if(cc>dc)
				{
					if(cr==dr+1 &&cc==dc+1)                   //check the very next row
					{
				      check=true;
					}
					else
					{
					for(int i=cr-1,j=cc-1;i>dr;i--,j--)         //from right bottom to left top
					{
						if(arr[i][j]!=nullptr)
						{
							check=false;
							break;
						}
						else
						{
							check=true;
						}
						if(i-1==dr)
						{
							if(j-1!=dc)
							{
								check=false;
								break;
							}
						}
					}
					}
				}
			}
			if(check==true)
			{
				if(temp!=temp1 && temp2==5)
				 {
					cout<<" CHECK MATE. . player "<<temp<<" wins"<<endl;
			    	 Checkmate();
				 }
				arr[dr][dc]=arr[cr][cc];
				arr[cr][cc]=nullptr;
				
			}
			else
			{
				Beep(1000000,500);
				system("cls");
				cout<<"ILLEGAL MOVE "<<endl;
				
			}
	  }
	 else
		{
				cout<<"ILLEGAL MOVE "<<endl;
				
		}

	}

}

